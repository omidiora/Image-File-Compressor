{"ast":null,"code":"var _jsxFileName = \"/home/omidiora/Desktop/React App image compressor/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport imageCompression from 'browser-image-compression';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.compressImage = this.compressImage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1024,\n      webWorker: {\n        progress: null,\n        inputSize: null,\n        outputSize: null,\n        inputUrl: null,\n        outputUrl: null\n      },\n      mainThread: {\n        progress: null,\n        inputSize: null,\n        outputSize: null,\n        inputUrl: null,\n        outputUrl: null\n      }\n    };\n  }\n\n  handleChange(target) {\n    return e => {\n      this.setState({\n        [target]: e.currentTarget.value\n      });\n    };\n  }\n\n  onProgress(p, useWebWorker) {\n    const targetName = useWebWorker ? 'webWorker' : 'mainThread';\n    this.setState(prevState => ({ ...prevState,\n      [targetName]: { ...prevState[targetName],\n        progress: p\n      }\n    }));\n  }\n\n  async compressImage(event, useWebWorker) {\n    const file = event.target.files[0];\n    console.log('input', file);\n    console.log('ExifOrientation', await imageCompression.getExifOrientation(file));\n    const targetName = useWebWorker ? 'webWorker' : 'mainThread';\n    this.setState(prevState => ({ ...prevState,\n      [targetName]: { ...prevState[targetName],\n        inputSize: (file.size / 1024 / 1024).toFixed(2),\n        inputUrl: URL.createObjectURL(file)\n      }\n    }));\n    var options = {\n      maxSizeMB: this.state.maxSizeMB,\n      maxWidthOrHeight: this.state.maxWidthOrHeight,\n      useWebWorker,\n      onProgress: p => this.onProgress(p, useWebWorker)\n    };\n    const output = await imageCompression(file, options);\n    console.log('output', output);\n    this.setState(prevState => ({ ...prevState,\n      [targetName]: { ...prevState[targetName],\n        outputSize: (output.size / 1024 / 1024).toFixed(2),\n        outputUrl: URL.createObjectURL(output)\n      }\n    }));\n  }\n\n  render() {\n    const {\n      webWorker,\n      mainThread,\n      maxSizeMB,\n      maxWidthOrHeight\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      id: \"exampleFormControlFile1\",\n      label: \"Example file input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"web-worker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Compress in web-worker\", ' ', webWorker.progress && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 36\n      }\n    }, webWorker.progress, \" %\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"web-worker\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => this.compressImage(e, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, webWorker.inputSize && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Source image size: \", webWorker.inputSize, \" mb\"), webWorker.outputSize && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \", Output image size: \", webWorker.outputSize))), (mainThread.inputUrl || webWorker.inputUrl) && /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"input preview\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"output preview\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: mainThread.inputUrl || webWorker.inputUrl,\n      alt: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: mainThread.outputUrl || webWorker.outputUrl,\n      alt: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/omidiora/Desktop/React App image compressor/src/App.js"],"names":["React","imageCompression","App","Component","constructor","args","compressImage","bind","handleChange","state","maxSizeMB","maxWidthOrHeight","webWorker","progress","inputSize","outputSize","inputUrl","outputUrl","mainThread","target","e","setState","currentTarget","value","onProgress","p","useWebWorker","targetName","prevState","event","file","files","console","log","getExifOrientation","size","toFixed","URL","createObjectURL","options","output","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport imageCompression from 'browser-image-compression'\n\nexport default class App extends React.Component {\n  constructor (...args) {\n    super(...args)\n    this.compressImage = this.compressImage.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1024,\n      webWorker: {\n        progress: null,\n        inputSize: null,\n        outputSize: null,\n        inputUrl: null,\n        outputUrl: null\n      },\n      mainThread: {\n        progress: null,\n        inputSize: null,\n        outputSize: null,\n        inputUrl: null,\n        outputUrl: null\n      }\n    }\n  }\n\n  handleChange (target) {\n    return (e) => {\n      this.setState({ [target]: e.currentTarget.value })\n    }\n  }\n\n  onProgress (p, useWebWorker) {\n    const targetName = useWebWorker ? 'webWorker' : 'mainThread'\n    this.setState(prevState => ({\n      ...prevState,\n      [targetName]: {\n        ...prevState[targetName],\n        progress: p\n      }\n    }))\n  }\n\n  async compressImage (event, useWebWorker) {\n    const file = event.target.files[0]\n    console.log('input', file)\n    console.log(\n      'ExifOrientation',\n      await imageCompression.getExifOrientation(file)\n    )\n    const targetName = useWebWorker ? 'webWorker' : 'mainThread'\n    this.setState(prevState => ({\n      ...prevState,\n      [targetName]: {\n        ...prevState[targetName],\n        inputSize: (file.size / 1024 / 1024).toFixed(2),\n        inputUrl: URL.createObjectURL(file)\n      }\n    }))\n    var options = {\n      maxSizeMB: this.state.maxSizeMB,\n      maxWidthOrHeight: this.state.maxWidthOrHeight,\n      useWebWorker,\n      onProgress: p => this.onProgress(p, useWebWorker)\n    }\n    const output = await imageCompression(file, options)\n    console.log('output', output)\n    this.setState(prevState => ({\n      ...prevState,\n      [targetName]: {\n        ...prevState[targetName],\n        outputSize: (output.size / 1024 / 1024).toFixed(2),\n        outputUrl: URL.createObjectURL(output)\n      }\n    }))\n  }\n\n  render () {\n    const { webWorker, mainThread, maxSizeMB, maxWidthOrHeight } = this.state\n    return (\n      <div className=\"App\">\n        <div>\n        <Form>\n  <Form.Group>\n    <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" />\n  </Form.Group>\n</Form>\n          <label htmlFor=\"web-worker\">\n            Compress in web-worker{' '}\n            {webWorker.progress && <span>{webWorker.progress} %</span>}\n            <input\n              id=\"web-worker\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={e => this.compressImage(e, true)}\n            />\n          </label>\n          <p>\n            {webWorker.inputSize && (\n              <span>Source image size: {webWorker.inputSize} mb</span>\n            )}\n            {webWorker.outputSize && (\n              <span>, Output image size: {webWorker.outputSize}</span>\n            )}\n          </p>\n        </div>\n       \n        {(mainThread.inputUrl || webWorker.inputUrl) && (\n          <table>\n            <thead>\n            <tr>\n              <td>input preview</td>\n              <td>output preview</td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><img src={mainThread.inputUrl || webWorker.inputUrl} alt=\"input\" /></td>\n              <td><img src={mainThread.outputUrl || webWorker.outputUrl} alt=\"output\" /></td>\n            </tr>\n            </tbody>\n          </table>\n        )}\n      </div>\n    )\n  }\n};\n"]},"metadata":{},"sourceType":"module"}